[package]
name = "alphafi_oracle"
edition = "2024.beta" # edition = "legacy" to use legacy (pre-2024) Move
published-at = "0x879393334080e5413a2f35553d45e3495fd328b1558b1f794d3acb655fa1f752"
# license = ""           # e.g., "MIT", "GPL", "Apache 2.0"
# authors = ["..."]      # e.g., ["Joe Smith (joesmith@noemail.com)", "John Snow (johnsnow@noemail.com)"]

#[dependencies]
#SupraOracle = { git = "https://github.com/Entropy-Foundation/dora-interface", subdir = "sui/mainnet/supra_holder", rev = "51c1875d86f20abe2a22e8d2ae7a3a2a2a56d5a1" }

[dependencies.Pyth]
#git = "https://github.com/pyth-network/pyth-crosschain.git"
#subdir = "target_chains/sui/contracts"
#rev = "sui-contract-mainnet"
git = "https://github.com/pyth-network/pyth-crosschain.git"
subdir = "target_chains/sui/contracts"
rev = "sui-contract-testnet"
 
[dependencies.Wormhole]
#git = "https://github.com/wormhole-foundation/wormhole.git"
#subdir = "sui/wormhole"
#rev = "sui-upgrade-mainnet"
git = "https://github.com/wormhole-foundation/wormhole.git"
subdir = "sui/wormhole"
rev = "sui-upgrade-testnet"
 
# Pyth is locked into this specific `rev` because the package depends on Wormhole and is pinned to this version.
#[dependencies.Sui]
#git = "https://github.com/MystenLabs/sui.git"
#subdir = "crates/sui-framework/packages/sui-framework"
#rev = "041c5f2bae2fe52079e44b70514333532d69f4e6"

[dependencies.alphafi_stdlib]
local = "../alphafi_stdlib"


#[dependencies]
#alphafi_stdlib = { local = "../alphafi_stdlib" }
#Sui = { git = "https://github.com/MystenLabs/sui.git", subdir = "crates/sui-framework/packages/sui-framework", rev = "framework/testnet" }


# For remote import, use the `{ git = "...", subdir = "...", rev = "..." }`.
# Revision can be a branch, a tag, and a commit hash.
# MyRemotePackage = { git = "https://some.remote/host.git", subdir = "remote/path", rev = "main" }

# For local dependencies use `local = path`. Path is relative to the package root
# Local = { local = "../path/to" }

# To resolve a version conflict and force a specific version for dependency
# override use `override = true`
# Override = { local = "../conflicting/version", override = true }

[addresses]
alphafi_oracle = "0x1e61b87eb037e18980aff9e9d9f64ef9b5944404b9ecac282630e01af6c2f8f1"

# Named addresses will be accessible in Move as `@name`. They're also exported:
# for example, `std = "0x1"` is exported by the Standard Library.
# alice = "0xA11CE"

[dev-dependencies]
# The dev-dependencies section allows overriding dependencies for `--test` and
# `--dev` modes. You can introduce test-only dependencies here.
# Local = { local = "../path/to/dev-build" }

[dev-addresses]
# The dev-addresses section allows overwriting named addresses for the `--test`
# and `--dev` modes.
# alice = "0xB0B"
#alphafi_stdlib = "0x1234578"

